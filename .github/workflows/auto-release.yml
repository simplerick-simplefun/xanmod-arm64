name: auto-release

on:
  schedule:
    - cron: '0 0 * * *'  # Runs at midnight (00:00) UTC every day

jobs:
  check_and_build_new_xanmod_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get last release tag of this repo
        id: get_latest_release_tag
        uses: actions/github-script@v7
        with:
          script: |
            const latestRelease = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            core.setOutput("tag_name", latestRelease.data.tag_name);
      
      - name: Get last release tag of "xanmod/linux"
        id: get_latest_release_tag_xanmod
        uses: actions/github-script@v7
        with:
          script: |
            const owner = 'xanmod';  // Replace 'target-owner' with the actual owner of the repository
            const repo = 'linux';    // Replace 'target-repo' with the actual repository name
            const latestRelease = await github.rest.repos.getLatestRelease({
              owner: owner,
              repo: repo,
            });
            core.setOutput("tag_name", latestRelease.data.tag_name);
      
      - name: Build
        id: build_kernel
        run: |
          MY_LATEST_TAG=${{ steps.get_latest_release_tag.outputs.tag_name }}
          XANMOD_LATEST_TAG=${{ steps.get_latest_release_tag_xanmod.outputs.tag_name }}
          echo "My latest release tag is $MY_LATEST_TAG"
          echo "XANMOD latest release tag is $XANMOD_LATEST_TAG"
          if [[ "${MY_LATEST_TAG}" == "${XANMOD_LATEST_TAG}" ]]; then
            echo "Current xanmod release version ${MY_LATEST_TAG} is same as version of last build. No need to build. Exit."
            exit 1
          fi
          sudo bash auto-build.sh "$XANMOD_LATEST_TAG"
      
      - name: Release
        if: ${{ steps.build_kernel.outcome == 'success' }}
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          append_body: false
          fail_on_unmatched_files: true
          name: "Version ${{ steps.get_latest_release_tag_xanmod.outputs.tag_name }}"
          tag_name: "${{ steps.get_latest_release_tag_xanmod.outputs.tag_name }}"
          files: |
            linux-${{ steps.get_latest_release_tag_xanmod.outputs.tag_name }}-kernel/debs/*
