name: test

on:
  push:
    branches:
      - main
 
  workflow_dispatch:

jobs:
  get-latest-release-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get last release tag of this repo
        id: get_latest_release_tag
        uses: actions/github-script@v6
        with:
          script: |
            const latestRelease = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            core.setOutput("tag_name", latestRelease.data.tag_name);
      
      - name: Get last release tag of "xanmod/linux"
        id: get_latest_release_tag_xanmod
        uses: actions/github-script@v6
        with:
          script: |
            const owner = 'xanmod';  // Replace 'target-owner' with the actual owner of the repository
            const repo = 'linux';    // Replace 'target-repo' with the actual repository name
            const latestRelease = await github.rest.repos.getLatestRelease({
              owner: owner,
              repo: repo,
            });
            core.setOutput("tag_name", latestRelease.data.tag_name);
      
      - name: Assign tags to variable
        run: |
          MY_LATEST_TAG=${{ steps.get_latest_release_tag.outputs.tag_name }}
          XANMOD_LATEST_TAG=${{ steps.get_latest_release_tag_xanmod.outputs.tag_name }}
          echo "My latest release tag is $MY_LATEST_TAG"
          echo "XANMOD latest release tag is $XANMOD_LATEST_TAG"
      
      - name: Build
        id: build_kernel
        run: |
          exit_code=$(sudo bash testbuild.sh "$MY_LATEST_TAG"  "$XANMOD_LATEST_TAG")
          echo "$exit_code"
          if [ "$exit_code" -ne 0 ]; then
            echo "script.sh did not complete with exit code $exit_code"
            exit 0
          fi
      
      - name: Release
        if: ${{ steps.build_kernel.outcome == 'success' }}
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          append_body: false
          fail_on_unmatched_files: true
          name: "Version ${{ inputs.version }}"
          tag_name: "${{ inputs.version }}"
          files: |
            linux-${{ inputs.version }}-kernel/debs/*
